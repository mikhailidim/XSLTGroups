<?xml version="1.0" encoding="UTF-8" ?>
<xsl:stylesheet version="2.0" xmlns:oracle-xsl-mapper="http://www.oracle.com/xsl/mapper/schemas"
                xmlns:oraxsl="http://www.oracle.com/XSL/Transform/java"
                xmlns:ns0="http://mmikhail.com/sample/xml/Orchard" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
                exclude-result-prefixes="oracle-xsl-mapper xsi xsd xsl ns0 oraxsl">
  <oracle-xsl-mapper:schema>
    <!--SPECIFICATION OF MAP SOURCES AND TARGETS, DO NOT MODIFY.-->
    <oracle-xsl-mapper:mapSources>
      <oracle-xsl-mapper:source type="XSD">
        <oracle-xsl-mapper:schema location="ApplesOranges.xsd"/>
        <oracle-xsl-mapper:rootElement name="Orchad" namespace="http://mmikhail.com/sample/xml/Orchard"/>
      </oracle-xsl-mapper:source>
      <oracle-xsl-mapper:source type="XSD">
        <oracle-xsl-mapper:schema location="ApplesOranges.xsd"/>
        <oracle-xsl-mapper:rootElement name="GroceryList" namespace="http://mmikhail.com/sample/xml/Orchard"/>
        <oracle-xsl-mapper:param name="OldList"/>
      </oracle-xsl-mapper:source>
    </oracle-xsl-mapper:mapSources>
    <oracle-xsl-mapper:mapTargets>
      <oracle-xsl-mapper:target type="XSD">
        <oracle-xsl-mapper:schema location="ApplesOranges.xsd"/>
        <oracle-xsl-mapper:rootElement name="GroceryList" namespace="http://mmikhail.com/sample/xml/Orchard"/>
      </oracle-xsl-mapper:target>
    </oracle-xsl-mapper:mapTargets>
    <!--GENERATED BY ORACLE XSL MAPPER 12.2.1.0.0(XSLT Build 151013.0700.0085) AT [FRI JUL 07 04:29:05 PDT 2017].-->
  </oracle-xsl-mapper:schema>
  <!--User Editing allowed BELOW this line - DO NOT DELETE THIS LINE-->
  <xsl:param name="OldList"/>
  <xsl:variable name="Orchard">
    <xsl:for-each select="/ns0:Orchad/*">
      <ns0:Item Name="{name()}">
        <xsl:value-of select="."/>
      </ns0:Item>
    </xsl:for-each>
  </xsl:variable>
  <xsl:variable name="groups">
   <xsl:for-each-group select="$OldList/ns0:GroceryList/ns0:Item,$Orchard/ns0:Item" group-by="@Name">
        <ns0:Item Name="{current-grouping-key()}">
          <xsl:value-of select="current-group()[1]"/>
        </ns0:Item>
      </xsl:for-each-group>
  </xsl:variable>
  <xsl:template match="/">
    <ns0:GroceryList>
      <xsl:copy-of select="$groups"/>
    </ns0:GroceryList>
  </xsl:template>
</xsl:stylesheet>
